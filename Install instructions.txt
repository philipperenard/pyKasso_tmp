### SETUP INSTRUCTIONS ###

The Python packages used in this code are a bit tricky to set up correctly, and have to be installed in the correct order.
In general, it's preferable to install everything possible with conda, and then use pip LAST.
It is key to install gdal in a new environment FIRST, then the the packages that require gdal, not the other way around.
Also need to install pip into environment BEFORE using.

0. Uninstall any previous GDAL installs.
Open Control Panel and go to Control Panel\Programs\Programs and Features
Scroll through the list, and if any GDAL installations are there, uninstall them.

1. If you don't have Anaconda, install it to manage environments. 

2. Open Anaconda Prompt, and create a new environment (named env_name) just for this project, with gdal installed directly during creation: 
`>conda create -n env_name -c conda-forge gdal`

3. Activate the new environment:
`>activate env_name`

4. In this environment, install rasterio (first add conda-forge as a channel to make things faster later):
`>conda config --add channels conda-forge`
`>conda install rasterio`

5. Install pysheds:
`>conda install pysheds`

5. Install gempy: 
Since gempy isn't supported with conda, first install pip directly into the environment:
`>conda install -n env_name pip`

6. Install gempy using pip:
`>pip install gempy`
to install the most up to date version 2, do this instead:
`>pip install gempy===2.0b0.dev2`

Or manually by cloning the GitHub repository:
`>git clone https://github.com/cgre-aachen/gempy.git`
then move the folder named gempy that was just installed to your GitHub folder
change directory (`>cd your\path\here`) to the gempy folder and call:
`>python setup.py install`
Then you can (but don't have to) also install the associated requirements (note: here, give the full path to the requirements.txt file, 
which should be in the gempy folder that was just installed:
`>pip install -r requirements.txt` 
`>pip install -r optional-requirements `

7. Test whether it worked by starting python and trying to import gempy (as long as no error message appears, it worked):
If error messages appear related to theano, see below.
```
>python
>>import gempy
```
The exit python to continue:
`>>exit()`


8. Install all other packages:
```
>conda install -c conda-forge jupyterlab
>conda install shapely
>conda install geopandas
>conda install pysheds
>pip install swmmtoolbox
>pip install git+https://github.com/UniNE-CHYN/karstnet
```

9. To get theano (needed for gempy) to work, you may need one or all of the following:
Add mingw toolchain:
`>conda install mingw libpython m2w64-toolchain`
Update mkl. It should get installed just by updating conda and anaconda:
```
>conda update conda
>conda update anaconda
```
But if it doesn't, try:
```
>conda install -c intel mkl (this will upgrade and downgrade a bunch of other packages)
>conda install mkl-service (this is required for mkl to be able to run)
```
You may also need to set a system variable MKL_THREADING_LAYER = GNU (this is done on your computer - search the start menu for system variables and click "Add new")
DO NOT just do conda install theano - this will crash Python!