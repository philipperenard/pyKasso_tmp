 ##################
### SKS SETTINGS ###
 ##################

---
############
### Grid ###
############

x0   : 0
y0   : 0
xnum : 100
ynum : 80
dx   : 10
dy   : 10

###############
### Polygon ###
###############

data_has_polygon : False
polygon_data     : 'notebooks/inputs/polygon.txt'

####################
### PointManager ###
####################

###Inlets
# 'random'    - full random points
# 'import'    - import points
# 'composite' - add n random points to imported points
inlets_mode   : 'import'
inlets_data   : 'notebooks/inputs/valley1/inlets.csv'
inlets_number : 1

###Outlets
# 'random'    - full random points
# 'import'    - import points
# 'composite' - add n random points to imported points
outlets_mode   : 'import'
outlets_data   : 'notebooks/inputs/valley1/outlets.csv'
outlets_number : 1

######################
### GeologyManager ###
######################

###Geology
# 'null'   - No geology
# 'import' - Import geology via GSLIB
# 'image'  - Import geology via image
geological_mode     : 'import'
geological_datafile : 'notebooks/inputs/valley1/geology2D.gslib'

###Topography
#'null'   - No topography
#'csv'    - Import topography from csv file 
topography_mode : 'csv'
topography_datafile : 'notebooks/inputs/valley1/dem.csv'

###Orientation
#'null'   - No orientation
#'topo'   - Calculate orientation from topography
#'import' - Import from gslib file (in progress)
orientation_mode : 'topo'

###Faults
# 'null'   - No faults
# 'import' - Import faults
# 'image'  - Import faults via image
faults_mode     : 'null'
faults_datafile : 'notebooks/inputs/faults.gslib'

###Fractures
# 'null'   - No fractures
# 'import' - Import fractures
# 'image'  - Import fractures via image
# 'random' - Generate random fractures
fractures_mode     : 'random'
fractures_datafile : 'notebooks/inputs/fractures.gslib'

# If fractures mode is 'generate'
fractures_densities       : [5.83e-5,1.38e-5,2.22e-5,2.5e-5,4.16e-5,6.66e-5,5e-5]
fractures_min_orientation : [      0,     15,     30,    60,    105,    120, 150]
fractures_max_orientation : [     15,     30,     45,   105,    120,    150, 180]

# For fracture size
fractures_alpha      : 2
fractures_min_length : 50
fractures_max_length : 800

###############################
### Fast-Marching Algorithm ###
###############################

#Choose which algorithm to use:
#'skfmm'     : scikit fast-marching: 2D, fast, requires minimal inputs, but does not represent high-relief catchments well (original algorithm)
#'Isotropic2': agd-hfm: 2D, equivalent of skfmm
#'Isotropic3': adg-hfm: 3D, equivalent of skfmm
#'Riemann2'  : agd-hfm: 2D, anisotropic, requires an anisotropy vector field (topography or geologic orientation), performs well in high-relief catchments
#'Riemann3'  : agd-hfm: 3D version of anisotropic algorithm
#for more options, see agd-hfm library documentation

algorithm : 'Riemann2'

#For skfmm:
#Ease of travel through each medium (higher=faster/easier) - must be >=1
code_out       : 0
code_aquifere  : 3
code_aquiclude : 2 
code_faults    : 5
code_fractures : 4
code_conduits  : 6

#For AGD-HFM:
#Travel cost parallel to gradient (higher=slower/harder)
cost_out       : 0.999   
cost_aquifer   : 0.5
cost_aquiclude : 0.7 
cost_faults    : 0.4
cost_fractures : 0.4
cost_conduits  : 0.1
cost_ratio     : 0.25     #ratio of travel cost parallel to gradient / travel cost prependicular to gradient

### Formation to consider and FMM code associated
geology_id       : [2,3] # Only for 'import' geological mode
geology_velocity : [code_aquifere,code_aquiclude]
geology_cost     : [cost_aquifer, cost_aquiclude]

###Inlet iteration:
#Length of array indicates number of iterations
#each integer indicates number of inlets to run in that iteration
#sum of integers must equal total number of inlets?
importance_factor : [3,2,1]   #[1,2,3]

#############
### Other ###
#############

# if 0 = total random
rand_seed : 1
...
